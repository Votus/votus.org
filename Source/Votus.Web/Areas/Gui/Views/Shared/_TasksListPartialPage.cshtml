@model Votus.Core.Domain.Tasks.CreateTaskCommand

<header class="TasksHeader" data-bind="click: toggleTasksDisplay">Tasks</header>
<div class="TasksDisplay">
    <form class="NewTaskForm" data-bind="submit: submitNewTask">
        @Html.HiddenFor(m =>
            m.NewTaskId,
            new {
                @class     = "NewTaskId",
                @data_bind = "value: generateGuid()"
            }
         )

        @Html.HiddenFor(m =>
            m.IdeaId,
            new {
                @data_bind = "value: $data.Id"
            }
        )
        <div class="Task">
            @Html.TextBoxFor(m => 
                m.NewTaskTitle, 
                new {
                    @class       = "NewTaskTitle", 
                    @placeholder = "Type your task here"
                }
            )
            
            @Html.ValidationMessageFor(m => m.NewTaskTitle) <button class="NewTaskButton">Submit</button>
        </div>
    </form>

    <ol data-bind="foreach: Tasks" class="Tasks">
        <li data-bind="attr:{ id: $data.Id() }" class="Task">
            <span data-bind="text: $data.CompletedVoteCount" class="CompletedVoteCount"></span>
            <span class="RequestStatus">
                <img class="Saving" src="~/Areas/Gui/Content/Images/ajax-loader.gif" />
                <img class="Saved" src="~/Areas/Gui/Content/Images/tick-circle-frame.png" />
            </span>
            <button data-bind="click: voteTaskCompleted" class="VoteCompletedButton">Vote Completed</button>
            <span data-bind="text: $data.Title" class="Title"></span>
        </li>
    </ol>
</div>